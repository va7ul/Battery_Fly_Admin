{"version":3,"file":"static/js/974.a8d129d1.chunk.js","mappings":"iNAEaA,EAAa,SAAHC,GAA2C,IAArCC,EAAID,EAAJC,KAAMC,EAAWF,EAAXE,YAAaC,EAAUH,EAAVG,WAC9C,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACLJ,KAAMA,EACNK,QAASJ,EACT,kBAAgB,qBAChB,mBAAiB,2BACjBK,UAAW,CACTC,SAAU,CACRC,GAAI,CACFC,gBAAiB,yBAIvBD,GAAI,CACF,qBAAsB,CACpBE,QAAS,iBACTC,aAAc,SAEhBC,SAAA,EAEFC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACC,GAAG,qBAAoBH,SAAC,yNAGrCT,EAAAA,EAAAA,MAACa,EAAAA,EAAa,CAAAJ,SAAA,EACZC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACLC,QAAShB,EACTM,GAAI,CACFW,MAAO,eACP,UAAW,CAAEA,MAAO,oBACpBP,SACH,wEAGDC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACLC,QAASjB,EACTO,GAAI,CACFW,MAAO,eACP,UAAW,CAAEA,MAAO,oBACpBP,SACH,gEAMT,C,wFC7CMQ,GAAoBC,EAAAA,EAAAA,IAAO,MAAPA,EAAc,SAAAtB,GAAA,IAAGuB,EAAKvB,EAALuB,MAAK,MAAQ,CACtDC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,OACR,qBAAsB,CACpBC,KAA6B,UAAvBN,EAAMO,QAAQC,KAAmB,UAAY,WAErD,qBAAsB,CACpBF,KAA6B,UAAvBN,EAAMO,QAAQC,KAAmB,UAAY,WAErD,qBAAsB,CACpBF,KAA6B,UAAvBN,EAAMO,QAAQC,KAAmB,UAAY,WAErD,qBAAsB,CACpBF,KAA6B,UAAvBN,EAAMO,QAAQC,KAAmB,OAAS,WAElD,qBAAsB,CACpBC,YAAoC,UAAvBT,EAAMO,QAAQC,KAAmB,MAAQ,OACtDF,KAA6B,UAAvBN,EAAMO,QAAQC,KAAmB,UAAY,QAEtD,IAEYE,EAAsB,WACjC,OACE7B,EAAAA,EAAAA,MAACiB,EAAiB,CAAAR,SAAA,EAChBC,EAAAA,EAAAA,KAAA,OACEoB,MAAM,MACNN,OAAO,MACPO,QAAQ,cACR,iBACAC,UAAU,QAAOvB,UAEjBT,EAAAA,EAAAA,MAAA,KAAGyB,KAAK,OAAOQ,SAAS,UAASxB,SAAA,EAC/BT,EAAAA,EAAAA,MAAA,KAAGkC,UAAU,sBAAqBzB,SAAA,EAChCC,EAAAA,EAAAA,KAAA,WACEyB,UAAU,kBACVC,GAAG,SACHC,GAAG,SACHC,GAAG,SACHC,GAAG,YAEL7B,EAAAA,EAAAA,KAAA,QACEyB,UAAU,kBACVK,EAAE,kJAEJ9B,EAAAA,EAAAA,KAAA,QACEyB,UAAU,kBACVK,EAAE,6FAEJ9B,EAAAA,EAAAA,KAAA,QACEyB,UAAU,kBACVK,EAAE,6jBAGN9B,EAAAA,EAAAA,KAAA,QACEyB,UAAU,kBACVK,EAAE,4OAEJxC,EAAAA,EAAAA,MAAA,KAAGmC,UAAU,kBAAkBD,UAAU,2BAA0BzB,SAAA,EACjEC,EAAAA,EAAAA,KAAA,WAAS0B,GAAG,SAASC,GAAG,QAAQC,GAAG,QAAQC,GAAG,WAC9C7B,EAAAA,EAAAA,KAAA,QAAM8B,EAAE,kEAId9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAG,CAACpC,GAAI,CAAEqC,GAAI,GAAIjC,SAAC,oEAG1B,C,qGCxEakC,EAA4B,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,SAAU,EAEhEC,EAAmB,SAAAH,GAAK,OAAIA,EAAMC,WAAWA,UAAW,E,oOCyBxDG,EAAkB,WAC7B,IAAAC,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCpD,EAAIsD,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAoCJ,EAAAA,EAAAA,YAAUK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAvCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,GAASC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,MACXhB,GAAaiB,EAAAA,EAAAA,IAAYf,GAC/BgB,GAA0Cb,EAAAA,EAAAA,UAAS,CAAC,GAAEc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,GAAkBC,EAAAA,EAAAA,UACtB,iBAAO,CACLC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAQ,EACT,GACD,KAGFC,EAAAA,EAAAA,YAAU,WACJd,EAAOe,SACTf,EAAOe,QAAQC,gBAAgBP,EAEnC,GAAG,CAACT,EAAQS,EAAiBtB,EAAYoB,IAEzC,IAAMU,GAAcP,EAAAA,EAAAA,UAClB,kBACEvB,EAAW+B,KAAI,SAAAC,GAAE,MAAK,CACpBjE,GAAIiE,EAAGC,IACPC,UAAWF,EAAGG,KACdC,SAAUJ,EAAGI,SACbC,MAAOL,EAAGK,MACVC,UAAWN,EAAGM,UACf,GAAE,GACL,CAACtC,IAGHuC,GAAwBlC,EAAAA,EAAAA,UAASyB,GAAYU,GAAAjC,EAAAA,EAAAA,GAAAgC,EAAA,GAAtCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAqBdG,EAAU,CACd,CACEC,MAAO,YACPC,WAAY,mDACZC,gBAAiB,0BACjBC,MAAO,SACPC,YAAa,SACbC,UAAU,GAEZ,CACEL,MAAO,WACPC,WAAY,uCACZC,gBAAiB,0BACjBI,KAAM,SACNH,MAAO,SACPC,YAAa,SACbC,UAAU,GAEZ,CACEL,MAAO,QACPC,WAAY,mDACZC,gBAAiB,0BACjBI,KAAM,UACND,UAAU,GAEZ,CACEL,MAAO,YACPC,WAAY,kFACZC,gBAAiB,0BACjBI,KAAM,OACNH,MAAO,SACPC,YAAa,SACbG,eAAgB,SAAAC,GACd,OAAa,MAATA,EACK,GAEH,GAANC,OAAUD,EAAME,iBAAiBC,MAAM,EAAG,IAC5C,GAEF,CACEX,MAAO,UACPM,KAAM,UACNL,WAAY,GACZC,gBAAiB,0BACjBU,cAAe,UACfC,WAAY,SAAA1G,GAAa,IAAD2G,EAAT3F,EAAEhB,EAAFgB,GAGb,OAFsC,QAAjB2F,EAAAtC,EAAcrD,UAAG,IAAA2F,OAAA,EAAjBA,EAAmB5E,QAAS6E,EAAAA,GAAAA,KAGxC,EACL9F,EAAAA,EAAAA,KAAC+F,EAAAA,EAAmB,CAClBC,MAAMhG,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,IACvBC,MAAM,OACNvG,GAAI,CACFW,MAAO,gBAETD,QAAS8F,EAAgBjG,MAE3BF,EAAAA,EAAAA,KAAC+F,EAAAA,EAAmB,CAClBC,MAAMhG,EAAAA,EAAAA,KAACoG,EAAAA,EAAiB,IACxBF,MAAM,SACNzE,UAAU,cACVpB,QAASgG,EAAkBnG,GAC3BI,MAAM,aAKL,EACLN,EAAAA,EAAAA,KAAC+F,EAAAA,EAAmB,CAClBC,MAAMhG,EAAAA,EAAAA,KAACsG,EAAAA,EAAgB,IACvBJ,MAAM,OACNzE,UAAU,cACVpB,QAASkG,EAAgBrG,GACzBI,MAAM,aAERN,EAAAA,EAAAA,KAAC+F,EAAAA,EAAmB,CAClBC,MAAMhG,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,IACjBN,MAAM,SACN7F,QAASoG,EAAkBvG,GAC3BI,MAAM,YAGZ,IAIEiG,EAAkB,SAAArG,GAAE,OAAI,WAC5BsD,GAAgBkD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACbnD,GAAa,IAAAoD,EAAAA,EAAAA,GAAA,GACfzG,EAAK,CAAEe,KAAM6E,EAAAA,GAAAA,QAElB,CAAE,EAEIK,EAAkB,SAAAjG,GAAE,OAAI,WAC5BsD,GAAgBkD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACbnD,GAAa,IAAAoD,EAAAA,EAAAA,GAAA,GACfzG,EAAK,CAAEe,KAAM6E,EAAAA,GAAAA,QAElB,CAAE,EAEIO,EAAoB,SAAAnG,GAAE,OAAI,WAC9BsD,GAAgBkD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACbnD,GAAa,IAAAoD,EAAAA,EAAAA,GAAA,GACfzG,EAAK,CAAEe,KAAM6E,EAAAA,GAAAA,KAAmBc,qBAAqB,MAGtChC,EAAKiC,MAAK,SAAAC,GAAG,OAAIA,EAAI5G,KAAOA,CAAE,IAClC6G,OACZlC,EAAQD,EAAKoC,QAAO,SAAAF,GAAG,OAAIA,EAAI5G,KAAOA,CAAE,IAE5C,CAAE,EAEIuG,EAAoB,SAAAvG,GAAE,OAAI,WAC9ByC,GAAQ,GACRI,EAAc7C,EAChB,CAAE,EA+CF,OACEZ,EAAAA,EAAAA,MAACyC,EAAAA,EAAG,CACFpC,GAAI,CACF,6BAA8B,CAC5BC,gBAAiBqH,EAAAA,GAAAA,QAAAA,WAAAA,UAEnBlH,SAAA,EAEFC,EAAAA,EAAAA,KAACf,EAAAA,EAAU,CACTE,KAAMA,EACNC,YAvDc,WAClBuD,GAAQ,EACV,EAsDMtD,WApDa,WACjB6D,GAASgE,EAAAA,EAAAA,IAAgBpE,GAC3B,KAoDI9C,EAAAA,EAAAA,KAACmH,EAAAA,EAAQ,CACPC,YAAU,EACVpE,OAAQA,EACR4B,KAAMA,EACNE,QAASA,EACTuC,SAAS,MACT9D,cAAeA,EACf+D,iBA1MmB,SAAAC,GACvB,IAAMC,GAAUd,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQa,GAAM,IAAER,OAAO,IACvClC,EAAQD,EAAKV,KAAI,SAAA4C,GAAG,OAAKA,EAAI5G,KAAOqH,EAAOrH,GAAKsH,EAAaV,CAAG,KAEhE,IAAMW,EAAe,CACnBnD,KAAMiD,EAAOlD,UACbE,SAAUgD,EAAOhD,SACjBC,MAAO+C,EAAO/C,OAShB,OANII,EAAKiC,MAAK,SAAAC,GAAG,OAAIA,EAAI5G,KAAOqH,EAAOrH,IAAwB,KAAlB4G,EAAIzC,SAAgB,IAC/DnB,GAASwE,EAAAA,EAAAA,IAAaD,IAEtBvE,GAASyE,EAAAA,EAAAA,IAAgB,CAAEzH,GAAIqH,EAAOrH,GAAI0H,UAAWH,KAGhDD,CACT,EA0LMK,iBAAiB,EACjBpE,gBAAiBA,EACjBqE,gBAAiB,CAAC,GAAI,GAAI,KAC1BC,4BAA0B,EAC1BC,MAAO,CACLC,QAASC,EAAAA,EACTC,WAhEa,SAAAC,GACnB,IAAQvD,EAA8BuD,EAA9BvD,QAASrB,EAAqB4E,EAArB5E,iBAqBjB,OACElE,EAAAA,EAAAA,MAAA+I,EAAAA,SAAA,CAAAtI,SAAA,EACEC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACLkI,QAAQ,YACRC,WAAWvI,EAAAA,EAAAA,KAACwI,EAAAA,EAAO,IACnBnI,QAxBc,WAClB,IAAMH,GAAKuI,EAAAA,EAAAA,MACX5D,GAAQ,SAAA6D,GAAO,SAAAlD,QAAAmD,EAAAA,EAAAA,GACVD,GAAO,CACV,CACExI,GAAAA,EACAmE,UAAW,GACXE,SAAU,GACVC,OAAO,EACPC,UAAW,GACXsC,OAAO,IACR,IAEHvD,GAAiB,SAAAoF,GAAQ,OAAAlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpBkC,GAAQ,IAAAjC,EAAAA,EAAAA,GAAA,GACVzG,EAAK,CAAEe,KAAM6E,EAAAA,GAAAA,KAAmB+C,aAAc,cAAa,GAEhE,EAQMlJ,GAAI,CAAEmJ,WAAY,OAAQC,YAAa,QAAShJ,SACjD,2FAGDC,EAAAA,EAAAA,KAACgJ,EAAAA,EAAc,MAGrB,EA8BQC,cAAe9H,EAAAA,GAEjB1B,UAAW,CACTwI,QAAS,CACPiB,iBAAiB,GAEnBf,WAAY,CAAEtD,QAAAA,EAASrB,iBAAAA,IAEzB2F,aAAc,CACZhB,WAAY,CAAEiB,gBAAiB,CAAEC,SAAU,MAE7C1J,GAAI,CAAE,2BAA4B,aAI1C,ECtQA,EAjBuB,WACrB,IAAMuD,GAAWC,EAAAA,EAAAA,MACXf,GAAYgB,EAAAA,EAAAA,IAAYnB,GAO9B,OAJA6B,EAAAA,EAAAA,YAAU,WACRZ,GAASoG,EAAAA,EAAAA,MACX,GAAG,CAACpG,KAGF5D,EAAAA,EAAAA,MAAA+I,EAAAA,SAAA,CAAAtI,SAAA,CACGqC,IAAapC,EAAAA,EAAAA,KAACuJ,EAAAA,EAAY,KACzBnH,IAAapC,EAAAA,EAAAA,KAACsC,EAAe,MAGrC,C,2BCtBIkH,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,MACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGhI,EAAG,0GACD,gB,2BCTA0H,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,MACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGhI,EAAG,+LACD,e,2BCTA0H,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,MACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGhI,EAAG,gKACD,e","sources":["components/Modals/DeleteItem/DeleteItem.jsx","components/Shared/NoRowsOverlay/NoRowsOverlay.jsx","redux/promoCodes/promoCodesSelectors.js","components/PromoCodesPage/PromoCodesTable.jsx","pages/PromoCodesPage.jsx","../node_modules/@mui/icons-material/CloseOutlined.js","../node_modules/@mui/icons-material/EditOutlined.js","../node_modules/@mui/icons-material/SaveOutlined.js"],"sourcesContent":["import { Button, Dialog, DialogActions, DialogTitle } from '@mui/material';\n\nexport const DeleteItem = ({ open, handleClose, deleteItem }) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      slotProps={{\n        backdrop: {\n          sx: {\n            backgroundColor: 'rgba(0, 0, 0, 0.75)',\n          },\n        },\n      }}\n      sx={{\n        '& .MuiDialog-paper': {\n          bgcolor: 'secondary.main',\n          borderRadius: '18px',\n        },\n      }}\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Ви впевнені, що хочете видалити промокод?\n      </DialogTitle>\n      <DialogActions>\n        <Button\n          onClick={deleteItem}\n          sx={{\n            color: 'text.primary',\n            '&:hover': { color: 'hoverColor.main' },\n          }}\n        >\n          Підтвердити\n        </Button>\n        <Button\n          onClick={handleClose}\n          sx={{\n            color: 'text.primary',\n            '&:hover': { color: 'hoverColor.main' },\n          }}\n        >\n          Скасувати\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst StyledGridOverlay = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '100%',\n  '& .ant-empty-img-1': {\n    fill: theme.palette.mode === 'light' ? '#aeb8c2' : '#262626',\n  },\n  '& .ant-empty-img-2': {\n    fill: theme.palette.mode === 'light' ? '#f5f5f7' : '#595959',\n  },\n  '& .ant-empty-img-3': {\n    fill: theme.palette.mode === 'light' ? '#dce0e6' : '#434343',\n  },\n  '& .ant-empty-img-4': {\n    fill: theme.palette.mode === 'light' ? '#fff' : '#1c1c1c',\n  },\n  '& .ant-empty-img-5': {\n    fillOpacity: theme.palette.mode === 'light' ? '0.8' : '0.08',\n    fill: theme.palette.mode === 'light' ? '#f5f5f5' : '#fff',\n  },\n}));\n\nexport const CustomNoRowsOverlay = () => {\n  return (\n    <StyledGridOverlay>\n      <svg\n        width=\"120\"\n        height=\"100\"\n        viewBox=\"0 0 184 152\"\n        aria-hidden\n        focusable=\"false\"\n      >\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(24 31.67)\">\n            <ellipse\n              className=\"ant-empty-img-5\"\n              cx=\"67.797\"\n              cy=\"106.89\"\n              rx=\"67.797\"\n              ry=\"12.668\"\n            />\n            <path\n              className=\"ant-empty-img-1\"\n              d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n            />\n            <path\n              className=\"ant-empty-img-2\"\n              d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n            />\n            <path\n              className=\"ant-empty-img-3\"\n              d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\n            />\n          </g>\n          <path\n            className=\"ant-empty-img-3\"\n            d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n          />\n          <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\n            <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\n            <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\n          </g>\n        </g>\n      </svg>\n      <Box sx={{ mt: 1 }}>Немає даних</Box>\n    </StyledGridOverlay>\n  );\n};\n","export const selectPromoCodesIsLoading = state => state.promoCodes.isLoading;\nexport const selectPromoCodesError = state => state.promoCodes.error;\nexport const selectPromoCodes = state => state.promoCodes.promoCodes;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useMemo, useState } from 'react';\nimport { selectPromoCodes } from '../../redux/promoCodes/promoCodesSelectors';\nimport {\n  addPromoCode,\n  deletePromoCode,\n  updatePromoCode,\n} from '../../redux/promoCodes/promoCodesOperations';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\nimport SaveOutlinedIcon from '@mui/icons-material/SaveOutlined';\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\nimport { CustomNoRowsOverlay } from 'components/Shared/NoRowsOverlay/NoRowsOverlay';\nimport { themeMUI } from 'styles/GlobalStyled';\nimport { Box, Button } from '@mui/material';\nimport {\n  DataGrid,\n  GridToolbar,\n  GridPagination,\n  GridRowModes,\n  GridActionsCellItem,\n  useGridApiRef,\n} from '@mui/x-data-grid';\nimport { randomId } from '@mui/x-data-grid-generator';\nimport { DeleteItem } from 'components/Modals/DeleteItem/DeleteItem';\n\nexport const PromoCodesTable = () => {\n  const [open, setOpen] = useState(false);\n  const [idToDelete, setIdToDelete] = useState();\n  const apiRef = useGridApiRef();\n  const dispatch = useDispatch();\n  const promoCodes = useSelector(selectPromoCodes);\n  const [rowModesModel, setRowModesModel] = useState({});\n\n  const autosizeOptions = useMemo(\n    () => ({\n      includeHeaders: true,\n      includeOutliers: true,\n      expand: true,\n    }),\n    []\n  );\n\n  useEffect(() => {\n    if (apiRef.current) {\n      apiRef.current.autosizeColumns(autosizeOptions);\n    }\n  }, [apiRef, autosizeOptions, promoCodes, rowModesModel]);\n\n  const initialRows = useMemo(\n    () =>\n      promoCodes.map(el => ({\n        id: el._id,\n        promoCode: el.name,\n        discount: el.discount,\n        valid: el.valid,\n        createdAt: el.createdAt,\n      })),\n    [promoCodes]\n  );\n\n  const [rows, setRows] = useState(initialRows);\n\n  const processRowUpdate = newRow => {\n    const updatedRow = { ...newRow, isNew: false };\n    setRows(rows.map(row => (row.id === newRow.id ? updatedRow : row)));\n\n    const newPromoData = {\n      name: newRow.promoCode,\n      discount: newRow.discount,\n      valid: newRow.valid,\n    };\n\n    if (rows.find(row => row.id === newRow.id && row.promoCode === '')) {\n      dispatch(addPromoCode(newPromoData));\n    } else {\n      dispatch(updatePromoCode({ id: newRow.id, promoData: newPromoData }));\n    }\n\n    return updatedRow;\n  };\n\n  const columns = [\n    {\n      field: 'promoCode',\n      headerName: 'Промокод',\n      headerClassName: 'super-app-theme--header',\n      align: 'center',\n      headerAlign: 'center',\n      editable: true,\n    },\n    {\n      field: 'discount',\n      headerName: 'Знижка',\n      headerClassName: 'super-app-theme--header',\n      type: 'number',\n      align: 'center',\n      headerAlign: 'center',\n      editable: true,\n    },\n    {\n      field: 'valid',\n      headerName: 'Активний',\n      headerClassName: 'super-app-theme--header',\n      type: 'boolean',\n      editable: true,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Дата додавання',\n      headerClassName: 'super-app-theme--header',\n      type: 'date',\n      align: 'center',\n      headerAlign: 'center',\n      valueFormatter: value => {\n        if (value == null) {\n          return '';\n        }\n        return `${value.toLocaleString().slice(0, 10)}`;\n      },\n    },\n    {\n      field: 'actions',\n      type: 'actions',\n      headerName: '',\n      headerClassName: 'super-app-theme--header',\n      cellClassName: 'actions',\n      getActions: ({ id }) => {\n        const isInEditMode = rowModesModel[id]?.mode === GridRowModes.Edit;\n\n        if (isInEditMode) {\n          return [\n            <GridActionsCellItem\n              icon={<SaveOutlinedIcon />}\n              label=\"Save\"\n              sx={{\n                color: 'primary.main',\n              }}\n              onClick={handleSaveClick(id)}\n            />,\n            <GridActionsCellItem\n              icon={<CloseOutlinedIcon />}\n              label=\"Cancel\"\n              className=\"textPrimary\"\n              onClick={handleCancelClick(id)}\n              color=\"inherit\"\n            />,\n          ];\n        }\n\n        return [\n          <GridActionsCellItem\n            icon={<EditOutlinedIcon />}\n            label=\"Edit\"\n            className=\"textPrimary\"\n            onClick={handleEditClick(id)}\n            color=\"inherit\"\n          />,\n          <GridActionsCellItem\n            icon={<DeleteIcon />}\n            label=\"Delete\"\n            onClick={handleDeleteClick(id)}\n            color=\"inherit\"\n          />,\n        ];\n      },\n    },\n  ];\n\n  const handleEditClick = id => () => {\n    setRowModesModel({\n      ...rowModesModel,\n      [id]: { mode: GridRowModes.Edit },\n    });\n  };\n\n  const handleSaveClick = id => () => {\n    setRowModesModel({\n      ...rowModesModel,\n      [id]: { mode: GridRowModes.View },\n    });\n  };\n\n  const handleCancelClick = id => () => {\n    setRowModesModel({\n      ...rowModesModel,\n      [id]: { mode: GridRowModes.View, ignoreModifications: true },\n    });\n\n    const editedRow = rows.find(row => row.id === id);\n    if (editedRow.isNew) {\n      setRows(rows.filter(row => row.id !== id));\n    }\n  };\n\n  const handleDeleteClick = id => () => {\n    setOpen(true);\n    setIdToDelete(id);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const deleteItem = () => {\n    dispatch(deletePromoCode(idToDelete));\n  };\n\n  const CustomFooter = props => {\n    const { setRows, setRowModesModel } = props;\n\n    const handleClick = () => {\n      const id = randomId();\n      setRows(oldRows => [\n        ...oldRows,\n        {\n          id,\n          promoCode: '',\n          discount: '',\n          valid: true,\n          createdAt: '',\n          isNew: true,\n        },\n      ]);\n      setRowModesModel(oldModel => ({\n        ...oldModel,\n        [id]: { mode: GridRowModes.Edit, fieldToFocus: 'promoCode' },\n      }));\n    };\n\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={handleClick}\n          sx={{ marginLeft: '10px', marginRight: 'auto' }}\n        >\n          Додати промокод\n        </Button>\n        <GridPagination />\n      </>\n    );\n  };\n\n  return (\n    <Box\n      sx={{\n        '& .super-app-theme--header': {\n          backgroundColor: themeMUI.palette.background.primary,\n        },\n      }}\n    >\n      <DeleteItem\n        open={open}\n        handleClose={handleClose}\n        deleteItem={deleteItem}\n      />\n      <DataGrid\n        autoHeight\n        apiRef={apiRef}\n        rows={rows}\n        columns={columns}\n        editMode=\"row\"\n        rowModesModel={rowModesModel}\n        processRowUpdate={processRowUpdate}\n        autosizeOnMount={true}\n        autosizeOptions={autosizeOptions}\n        pageSizeOptions={[10, 25, 100]}\n        hideFooterSelectedRowCount\n        slots={{\n          toolbar: GridToolbar,\n          pagination: CustomFooter,\n          noRowsOverlay: CustomNoRowsOverlay,\n        }}\n        slotProps={{\n          toolbar: {\n            showQuickFilter: true,\n          },\n          pagination: { setRows, setRowModesModel },\n        }}\n        initialState={{\n          pagination: { paginationModel: { pageSize: 10 } },\n        }}\n        sx={{ '--DataGrid-overlayHeight': '300px' }}\n      />\n    </Box>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPromoCodes } from '../redux/promoCodes/promoCodesOperations';\nimport {\n  selectPromoCodesIsLoading,\n  // selectPromoCodesError,\n} from '../redux/promoCodes/promoCodesSelectors';\nimport { CustomLoader } from 'components/Shared/CustomLoader/CustomLoader';\nimport { PromoCodesTable } from 'components/PromoCodesPage/PromoCodesTable';\n\nconst PromoCodesPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectPromoCodesIsLoading);\n  // const error = useSelector(selectPromoCodesError);\n\n  useEffect(() => {\n    dispatch(getPromoCodes());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <CustomLoader />}\n      {!isLoading && <PromoCodesTable />}\n    </>\n  );\n};\n\nexport default PromoCodesPage;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'CloseOutlined');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m14.06 9.02.92.92L5.92 19H5v-.92zM17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29m-3.6 3.19L3 17.25V21h3.75L17.81 9.94z\"\n}), 'EditOutlined');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm2 16H5V5h11.17L19 7.83zm-7-7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3M6 6h9v4H6z\"\n}), 'SaveOutlined');"],"names":["DeleteItem","_ref","open","handleClose","deleteItem","_jsxs","Dialog","onClose","slotProps","backdrop","sx","backgroundColor","bgcolor","borderRadius","children","_jsx","DialogTitle","id","DialogActions","Button","onClick","color","StyledGridOverlay","styled","theme","display","flexDirection","alignItems","justifyContent","height","fill","palette","mode","fillOpacity","CustomNoRowsOverlay","width","viewBox","focusable","fillRule","transform","className","cx","cy","rx","ry","d","Box","mt","selectPromoCodesIsLoading","state","promoCodes","isLoading","selectPromoCodes","PromoCodesTable","_useState","useState","_useState2","_slicedToArray","setOpen","_useState3","_useState4","idToDelete","setIdToDelete","apiRef","useGridApiRef","dispatch","useDispatch","useSelector","_useState5","_useState6","rowModesModel","setRowModesModel","autosizeOptions","useMemo","includeHeaders","includeOutliers","expand","useEffect","current","autosizeColumns","initialRows","map","el","_id","promoCode","name","discount","valid","createdAt","_useState7","_useState8","rows","setRows","columns","field","headerName","headerClassName","align","headerAlign","editable","type","valueFormatter","value","concat","toLocaleString","slice","cellClassName","getActions","_rowModesModel$id","GridRowModes","GridActionsCellItem","icon","SaveOutlinedIcon","label","handleSaveClick","CloseOutlinedIcon","handleCancelClick","EditOutlinedIcon","handleEditClick","DeleteIcon","handleDeleteClick","_objectSpread","_defineProperty","ignoreModifications","find","row","isNew","filter","themeMUI","deletePromoCode","DataGrid","autoHeight","editMode","processRowUpdate","newRow","updatedRow","newPromoData","addPromoCode","updatePromoCode","promoData","autosizeOnMount","pageSizeOptions","hideFooterSelectedRowCount","slots","toolbar","GridToolbar","pagination","props","_Fragment","variant","startIcon","AddIcon","randomId","oldRows","_toConsumableArray","oldModel","fieldToFocus","marginLeft","marginRight","GridPagination","noRowsOverlay","showQuickFilter","initialState","paginationModel","pageSize","getPromoCodes","CustomLoader","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx"],"sourceRoot":""}