{"version":3,"file":"static/js/96.ed19b90e.chunk.js","mappings":"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","sources":["components/Shared/NoRowsOverlay/NoRowsOverlay.jsx","redux/customers/customersSelectors.js","components/CustomersPage/CustomersTable.jsx","pages/CustomersPage.jsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst StyledGridOverlay = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '100%',\n  '& .ant-empty-img-1': {\n    fill: theme.palette.mode === 'light' ? '#aeb8c2' : '#262626',\n  },\n  '& .ant-empty-img-2': {\n    fill: theme.palette.mode === 'light' ? '#f5f5f7' : '#595959',\n  },\n  '& .ant-empty-img-3': {\n    fill: theme.palette.mode === 'light' ? '#dce0e6' : '#434343',\n  },\n  '& .ant-empty-img-4': {\n    fill: theme.palette.mode === 'light' ? '#fff' : '#1c1c1c',\n  },\n  '& .ant-empty-img-5': {\n    fillOpacity: theme.palette.mode === 'light' ? '0.8' : '0.08',\n    fill: theme.palette.mode === 'light' ? '#f5f5f5' : '#fff',\n  },\n}));\n\nexport const CustomNoRowsOverlay = () => {\n  return (\n    <StyledGridOverlay>\n      <svg\n        width=\"120\"\n        height=\"100\"\n        viewBox=\"0 0 184 152\"\n        aria-hidden\n        focusable=\"false\"\n      >\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(24 31.67)\">\n            <ellipse\n              className=\"ant-empty-img-5\"\n              cx=\"67.797\"\n              cy=\"106.89\"\n              rx=\"67.797\"\n              ry=\"12.668\"\n            />\n            <path\n              className=\"ant-empty-img-1\"\n              d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n            />\n            <path\n              className=\"ant-empty-img-2\"\n              d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n            />\n            <path\n              className=\"ant-empty-img-3\"\n              d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\n            />\n          </g>\n          <path\n            className=\"ant-empty-img-3\"\n            d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n          />\n          <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\n            <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\n            <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\n          </g>\n        </g>\n      </svg>\n      <Box sx={{ mt: 1 }}>Немає даних</Box>\n    </StyledGridOverlay>\n  );\n};\n","export const selectCustomersIsLoading = state => state.customers.isLoading;\nexport const selectCustomersError = state => state.customers.error;\nexport const selectCustomers = state => state.customers.customers;\n","import { useSelector } from 'react-redux';\nimport { useEffect, useMemo } from 'react';\nimport { selectCustomers } from '../../redux/customers/customersSelectors';\nimport { Box } from '@mui/material';\nimport { DataGrid, GridToolbar, useGridApiRef } from '@mui/x-data-grid';\nimport { CustomNoRowsOverlay } from 'components/Shared/NoRowsOverlay/NoRowsOverlay';\n\nexport const CustomersTable = () => {\n  const apiRef = useGridApiRef();\n  const customers = useSelector(selectCustomers);\n\n  const autosizeOptions = useMemo(\n    () => ({\n      includeHeaders: true,\n      includeOutliers: true,\n      expand: true,\n    }),\n    []\n  );\n\n  useEffect(() => {\n    if (apiRef.current) {\n      apiRef.current.autosizeColumns(autosizeOptions);\n    }\n  }, [apiRef, autosizeOptions, customers]);\n\n  const rows = useMemo(\n    () =>\n      customers.map(el => ({\n        id: el._id,\n        firstName: el.firstName,\n        lastName: el.lastName,\n        patronymic: el.patronymic ? el.patronymic : '',\n        tel: el.tel ? el.tel : '',\n        email: el.email,\n        verifiedEmail: el.verifiedEmail,\n        promoCodes: el.promoCodes ? el.promoCodes : '',\n        delivery: el.delivery\n          ? `${el.delivery.city}, ${el.delivery.warehouse}`\n          : '',\n        createdAt: el.createdAt,\n      })),\n    [customers]\n  );\n\n  const columns = [\n    { field: 'lastName', headerName: 'Прізвище' },\n    { field: 'firstName', headerName: 'Імя' },\n    { field: 'patronymic', headerName: 'По батькові' },\n    {\n      field: 'email',\n      headerName: 'Пошта',\n    },\n    {\n      field: 'tel',\n      headerName: 'Телефон',\n      // align: 'left',\n      // headerAlign: 'left',\n    },\n\n    {\n      field: 'promoCodes',\n      headerName: 'Промокоди',\n    },\n    {\n      field: 'delivery',\n      headerName: 'Доставка',\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Дата реєстрації',\n      type: 'date',\n      valueFormatter: value => {\n        if (value == null) {\n          return '';\n        }\n        return `${value.toLocaleString().slice(0, 10)}`;\n      },\n    },\n    {\n      field: 'verifiedEmail',\n      headerName: 'Верифікований',\n      type: 'boolean',\n    },\n  ];\n\n  return (\n    <Box>\n      <DataGrid\n        autoHeight\n        apiRef={apiRef}\n        rows={rows}\n        columns={columns}\n        autosizeOptions={autosizeOptions}\n        pageSizeOptions={[10, 25, 100]}\n        hideFooterSelectedRowCount\n        slots={{\n          toolbar: GridToolbar,\n          noRowsOverlay: CustomNoRowsOverlay,\n        }}\n        slotProps={{\n          toolbar: {\n            showQuickFilter: true,\n          },\n        }}\n        initialState={{\n          pagination: { paginationModel: { pageSize: 10 } },\n          // columns: {\n          //   columnVisibilityModel: {\n          //     patronymic: false,\n          //     promoCodes: false,\n          //     delivery: false,\n          //     createdAt: false,\n          //   },\n          // },\n        }}\n        sx={{ '--DataGrid-overlayHeight': '300px' }}\n      />\n    </Box>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCustomers } from '../redux/customers/customersOperations';\nimport {\n  selectCustomersIsLoading,\n  selectCustomersError,\n} from '../redux/customers/customersSelectors';\nimport { CustomLoader } from 'components/Shared/CustomLoader/CustomLoader';\nimport { CustomersTable } from 'components/CustomersPage/CustomersTable';\n\nconst CustomersPage = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectCustomersIsLoading);\n  const error = useSelector(selectCustomersError);\n\n  useEffect(() => {\n    dispatch(getCustomers());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <CustomLoader />}\n      {!isLoading && !error && <CustomersTable />}\n      <CustomersTable />\n    </>\n  );\n};\n\nexport default CustomersPage;\n"],"names":["StyledGridOverlay","styled","_ref","theme","display","flexDirection","alignItems","justifyContent","height","fill","palette","mode","fillOpacity","CustomNoRowsOverlay","_jsxs","children","_jsx","width","viewBox","focusable","fillRule","transform","className","cx","cy","rx","ry","d","Box","sx","mt","selectCustomersIsLoading","state","customers","isLoading","selectCustomersError","error","selectCustomers","CustomersTable","apiRef","useGridApiRef","useSelector","autosizeOptions","useMemo","includeHeaders","includeOutliers","expand","useEffect","current","autosizeColumns","rows","map","el","id","_id","firstName","lastName","patronymic","tel","email","verifiedEmail","promoCodes","delivery","concat","city","warehouse","createdAt","DataGrid","autoHeight","columns","field","headerName","type","valueFormatter","value","toLocaleString","slice","pageSizeOptions","hideFooterSelectedRowCount","slots","toolbar","GridToolbar","noRowsOverlay","slotProps","showQuickFilter","initialState","pagination","paginationModel","pageSize","dispatch","useDispatch","getCustomers","_Fragment","CustomLoader"],"sourceRoot":""}