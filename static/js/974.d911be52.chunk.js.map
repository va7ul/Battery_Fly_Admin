{"version":3,"file":"static/js/974.d911be52.chunk.js","mappings":"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","sources":["components/Shared/NoRowsOverlay/NoRowsOverlay.jsx","redux/promoCodes/promoCodesSelectors.js","components/PromoCodesPage/PromoCodesTable.jsx","pages/PromoCodesPage.jsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst StyledGridOverlay = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '100%',\n  '& .ant-empty-img-1': {\n    fill: theme.palette.mode === 'light' ? '#aeb8c2' : '#262626',\n  },\n  '& .ant-empty-img-2': {\n    fill: theme.palette.mode === 'light' ? '#f5f5f7' : '#595959',\n  },\n  '& .ant-empty-img-3': {\n    fill: theme.palette.mode === 'light' ? '#dce0e6' : '#434343',\n  },\n  '& .ant-empty-img-4': {\n    fill: theme.palette.mode === 'light' ? '#fff' : '#1c1c1c',\n  },\n  '& .ant-empty-img-5': {\n    fillOpacity: theme.palette.mode === 'light' ? '0.8' : '0.08',\n    fill: theme.palette.mode === 'light' ? '#f5f5f5' : '#fff',\n  },\n}));\n\nexport const CustomNoRowsOverlay = () => {\n  return (\n    <StyledGridOverlay>\n      <svg\n        width=\"120\"\n        height=\"100\"\n        viewBox=\"0 0 184 152\"\n        aria-hidden\n        focusable=\"false\"\n      >\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(24 31.67)\">\n            <ellipse\n              className=\"ant-empty-img-5\"\n              cx=\"67.797\"\n              cy=\"106.89\"\n              rx=\"67.797\"\n              ry=\"12.668\"\n            />\n            <path\n              className=\"ant-empty-img-1\"\n              d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n            />\n            <path\n              className=\"ant-empty-img-2\"\n              d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n            />\n            <path\n              className=\"ant-empty-img-3\"\n              d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\n            />\n          </g>\n          <path\n            className=\"ant-empty-img-3\"\n            d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n          />\n          <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\n            <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\n            <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\n          </g>\n        </g>\n      </svg>\n      <Box sx={{ mt: 1 }}>Немає даних</Box>\n    </StyledGridOverlay>\n  );\n};\n","export const selectPromoCodesIsLoading = state => state.promoCodes.isLoading;\nexport const selectPromoCodesError = state => state.promoCodes.error;\nexport const selectPromoCodes = state => state.promoCodes.promoCodes;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useMemo, useState } from 'react';\nimport { selectPromoCodes } from '../../redux/promoCodes/promoCodesSelectors';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\nimport SaveOutlinedIcon from '@mui/icons-material/SaveOutlined';\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\nimport { CustomNoRowsOverlay } from 'components/Shared/NoRowsOverlay/NoRowsOverlay';\nimport { Box, Button, Dialog, DialogActions, DialogTitle } from '@mui/material';\nimport {\n  DataGrid,\n  GridToolbar,\n  GridPagination,\n  GridRowModes,\n  GridActionsCellItem,\n  useGridApiRef,\n} from '@mui/x-data-grid';\nimport { randomId } from '@mui/x-data-grid-generator';\n\nexport const PromoCodesTable = () => {\n  const [open, setOpen] = useState(false);\n  const apiRef = useGridApiRef();\n  const dispatch = useDispatch();\n  const promoCodes = useSelector(selectPromoCodes);\n\n  const autosizeOptions = useMemo(\n    () => ({\n      includeHeaders: true,\n      includeOutliers: true,\n      expand: true,\n    }),\n    []\n  );\n\n  useEffect(() => {\n    if (apiRef.current) {\n      apiRef.current.autosizeColumns(autosizeOptions);\n    }\n  }, [apiRef, autosizeOptions, promoCodes]);\n\n  const initialRows = useMemo(\n    () =>\n      promoCodes.map(el => ({\n        id: el._id,\n        promoCode: el.name,\n        discount: el.discount,\n        valid: el.valid,\n        createdAt: el.createdAt,\n      })),\n    [promoCodes]\n  );\n\n  const [rows, setRows] = useState(initialRows);\n  const [rowModesModel, setRowModesModel] = useState({});\n\n  const columns = [\n    { field: 'promoCode', headerName: 'Промокод', editable: true },\n    {\n      field: 'discount',\n      headerName: 'Знижка',\n      type: 'number',\n      align: 'left',\n      headerAlign: 'left',\n      editable: true,\n    },\n    {\n      field: 'valid',\n      headerName: 'Активний',\n      type: 'boolean',\n      editable: true,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Дата додавання',\n      type: 'date',\n      editable: true,\n      valueFormatter: value => {\n        if (value == null) {\n          return '';\n        }\n        return `${value.toLocaleString().slice(0, 10)}`;\n      },\n    },\n    {\n      field: 'actions',\n      type: 'actions',\n      headerName: '',\n      cellClassName: 'actions',\n      getActions: ({ id }) => {\n        const isInEditMode = rowModesModel[id]?.mode === GridRowModes.Edit;\n\n        if (isInEditMode) {\n          return [\n            <GridActionsCellItem\n              icon={<SaveOutlinedIcon />}\n              label=\"Save\"\n              sx={{\n                color: 'primary.main',\n              }}\n              onClick={handleSaveClick(id)}\n            />,\n            <GridActionsCellItem\n              icon={<CloseOutlinedIcon />}\n              label=\"Cancel\"\n              className=\"textPrimary\"\n              onClick={handleCancelClick(id)}\n              color=\"inherit\"\n            />,\n          ];\n        }\n\n        return [\n          <GridActionsCellItem\n            icon={<EditOutlinedIcon />}\n            label=\"Edit\"\n            className=\"textPrimary\"\n            onClick={handleEditClick(id)}\n            color=\"inherit\"\n          />,\n          <GridActionsCellItem\n            icon={<DeleteIcon />}\n            label=\"Delete\"\n            onClick={handleDeleteClick(id)}\n            color=\"inherit\"\n          />,\n        ];\n      },\n    },\n  ];\n\n  const handleEditClick = id => () => {\n    setRowModesModel({\n      ...rowModesModel,\n      [id]: { mode: GridRowModes.Edit },\n    });\n  };\n\n  const handleSaveClick = id => () => {\n    setRowModesModel({\n      ...rowModesModel,\n      [id]: { mode: GridRowModes.View },\n    });\n  };\n\n  const handleCancelClick = id => () => {\n    setRowModesModel({\n      ...rowModesModel,\n      [id]: { mode: GridRowModes.View, ignoreModifications: true },\n    });\n\n    const editedRow = rows.find(row => row.id === id);\n    if (editedRow.isNew) {\n      setRows(rows.filter(row => row.id !== id));\n    }\n  };\n\n  const handleDeleteClick = id => () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const deleteProduct = () => {\n    dispatch();\n  };\n\n  const CustomFooter = props => {\n    const { setRows, setRowModesModel } = props;\n\n    const handleClick = () => {\n      const id = randomId();\n      const date = new Date().toLocaleDateString();\n      setRows(oldRows => [\n        ...oldRows,\n        {\n          id,\n          promoCode: '',\n          discount: '',\n          valid: true,\n          createdAt: date,\n          isNew: true,\n        },\n      ]);\n      setRowModesModel(oldModel => ({\n        ...oldModel,\n        [id]: { mode: GridRowModes.Edit, fieldToFocus: 'name' },\n      }));\n    };\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={handleClick}\n          sx={{ marginLeft: '10px', marginRight: 'auto' }}\n        >\n          Додати промокод\n        </Button>\n        <GridPagination />\n      </>\n    );\n  };\n\n  return (\n    <Box>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        slotProps={{\n          backdrop: {\n            sx: {\n              backgroundColor: 'rgba(0, 0, 0, 0.75)',\n            },\n          },\n        }}\n        sx={{\n          '& .MuiDialog-paper': {\n            bgcolor: 'secondary.main',\n            borderRadius: '18px',\n          },\n        }}\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Ви впевнені, що хочете видалити товар?\n        </DialogTitle>\n        <DialogActions>\n          <Button\n            onClick={deleteProduct}\n            sx={{\n              color: 'text.primary',\n              '&:hover': { color: 'hoverColor.main' },\n            }}\n          >\n            Підтвердити\n          </Button>\n          <Button\n            onClick={handleClose}\n            sx={{\n              color: 'text.primary',\n              '&:hover': { color: 'hoverColor.main' },\n            }}\n          >\n            Скасувати\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <DataGrid\n        autoHeight\n        apiRef={apiRef}\n        rows={rows}\n        columns={columns}\n        editMode=\"row\"\n        autosizeOptions={autosizeOptions}\n        pageSizeOptions={[10, 25, 100]}\n        hideFooterSelectedRowCount\n        slots={{\n          toolbar: GridToolbar,\n          pagination: CustomFooter,\n          noRowsOverlay: CustomNoRowsOverlay,\n        }}\n        slotProps={{\n          toolbar: {\n            showQuickFilter: true,\n          },\n          pagination: { setRows, setRowModesModel },\n        }}\n        initialState={{\n          pagination: { paginationModel: { pageSize: 10 } },\n        }}\n        sx={{ '--DataGrid-overlayHeight': '300px' }}\n      />\n    </Box>\n  );\n};\n","// import { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getPromoCodes } from '../redux/promoCodes/promoCodesOperations';\n// import {\n//   selectPromoCodesIsLoading,\n//   selectPromoCodesError,\n// } from '../redux/promoCodes/promoCodesSelectors';\n// import { CustomLoader } from 'components/Shared/CustomLoader/CustomLoader';\nimport { PromoCodesTable } from 'components/PromoCodesPage/PromoCodesTable';\n\nconst PromoCodesPage = () => {\n  // const dispatch = useDispatch();\n  // const isLoading = useSelector(selectPromoCodesIsLoading);\n  // const error = useSelector(selectPromoCodesError);\n\n  // useEffect(() => {\n  //   dispatch(getPromoCodes());\n  // }, [dispatch]);\n\n  return (\n    <>\n      {/* {isLoading && <CustomLoader />}\n      {!isLoading && !error && <PromoCodesTable />} */}\n      <PromoCodesTable />\n    </>\n  );\n};\n\nexport default PromoCodesPage;\n"],"names":["StyledGridOverlay","styled","_ref","theme","display","flexDirection","alignItems","justifyContent","height","fill","palette","mode","fillOpacity","CustomNoRowsOverlay","_jsxs","children","_jsx","width","viewBox","focusable","fillRule","transform","className","cx","cy","rx","ry","d","Box","sx","mt","selectPromoCodes","state","promoCodes","PromoCodesTable","_useState","useState","_useState2","_slicedToArray","open","setOpen","apiRef","useGridApiRef","dispatch","useDispatch","useSelector","autosizeOptions","useMemo","includeHeaders","includeOutliers","expand","useEffect","current","autosizeColumns","initialRows","map","el","id","_id","promoCode","name","discount","valid","createdAt","_useState3","_useState4","rows","setRows","_useState5","_useState6","rowModesModel","setRowModesModel","columns","field","headerName","editable","type","align","headerAlign","valueFormatter","value","concat","toLocaleString","slice","cellClassName","getActions","_rowModesModel$id","GridRowModes","GridActionsCellItem","icon","SaveOutlinedIcon","label","color","onClick","handleSaveClick","CloseOutlinedIcon","handleCancelClick","EditOutlinedIcon","handleEditClick","DeleteIcon","handleDeleteClick","_objectSpread","_defineProperty","ignoreModifications","find","row","isNew","filter","handleClose","Dialog","onClose","slotProps","backdrop","backgroundColor","bgcolor","borderRadius","DialogTitle","DialogActions","Button","DataGrid","autoHeight","editMode","pageSizeOptions","hideFooterSelectedRowCount","slots","toolbar","GridToolbar","pagination","props","_Fragment","variant","startIcon","AddIcon","randomId","date","Date","toLocaleDateString","oldRows","_toConsumableArray","oldModel","fieldToFocus","marginLeft","marginRight","GridPagination","noRowsOverlay","showQuickFilter","initialState","paginationModel","pageSize"],"sourceRoot":""}