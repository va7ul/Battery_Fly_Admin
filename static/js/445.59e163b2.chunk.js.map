{"version":3,"file":"static/js/445.59e163b2.chunk.js","mappings":"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","sources":["common/schemas/productSchema.ts","common/schemas/productZbirkySchema.ts","components/AddProductPage/AddProduct/AddProduct.styled.js","components/AddProductPage/AddProductZbirky/AddProductZbirky.styled.js","components/EditProductPage/EditProduct/EditProduct.styled.js","components/EditProductPage/EditProduct/EditProduct.tsx","components/EditProductPage/EditProductZbirky/EditProductZbirky.styled.js","components/EditProductPage/EditProductZbirky/EditProductZbirky.tsx","pages/EditProductPage.tsx","redux/products/productsSelectors.ts"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const productSchema = Yup.object().shape({\n  name: Yup.string().required('Введіть назву товару'),\n  price: Yup.number()\n    .required('Введіть ціну товару')\n    .positive('Число повинно бути позитивним')\n    .integer(),\n  description: Yup.string().required('Введіть опис товару'),\n  quantity: Yup.number()\n    .required('Введіть кількість товару')\n    .min(0, 'Число повинно бути більшим або дорівнювати 0')\n    .integer(),\n  discount: Yup.number().positive('Число повинно бути позитивним').integer(),\n  information: Yup.string().required('Введіть інформацію про товар'),\n});\n","import * as Yup from 'yup';\n\nexport const productZbirkySchema = Yup.object().shape({\n  name: Yup.string().required('Введіть назву товару'),\n  price: Yup.string()\n    .trim()\n    .matches(\n      /^\\d+-\\d+$/,\n      'Введіть загальну ціну товару в форматі від і до через дефіс'\n    )\n    .required('Введіть загальну ціну товару'),\n  description: Yup.string().required('Введіть загальний опис товару'),\n  quantity: Yup.number()\n    .min(0, 'Число повинно бути більшим або дорівнювати 0')\n    .required('Введіть кількість товару')\n    .integer(),\n  discount: Yup.number().positive('Число повинно бути позитивним').integer(),\n  information: Yup.string().required('Введіть загальну інформацію про товар'),\n  capacity: Yup.array()\n    .of(\n      Yup.object().shape({\n        capacity: Yup.number()\n          .required('Введіть значення ємності')\n          .positive('Число повинно бути позитивним')\n          .integer(),\n        description: Yup.string().required(\n          'Введіть опис товару, згідно даної ємності'\n        ),\n        price: Yup.number()\n          .required('Введіть ціну товару, згідно даної ємності')\n          .positive('Число повинно бути позитивним')\n          .integer(),\n        holder: Yup.number()\n          .positive('Число повинно бути позитивним')\n          .integer(),\n      })\n    )\n    .required(),\n});\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  padding: 40px 110px;\n`;\n\nexport const Title = styled.p`\n  font-size: 40px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const SubTitle = styled.p`\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 5px;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 5px;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 1060px;\n  height: 34px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.textPrimary};\n  border: transparent;\n  border-radius: 8px;\n  background: ${props => props.theme.colors.greyBackgroundPaper};\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${props => props.theme.colors.hoverColor};\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: ${props => props.theme.colors.error};\n  font-size: 12px;\n`;\n\nexport const StyledTextField = styled(Field)`\n  width: 1060px;\n  height: 300px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.textPrimary};\n  border: transparent;\n  border-radius: 8px;\n  background: ${props => props.theme.colors.greyBackgroundPaper};\n  resize: vertical;\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${props => props.theme.colors.hoverColor};\n  }\n`;\n\nexport const Input = styled.input`\n  background: ${props => props.theme.colors.greyBackgroundPaper};\n  border-bottom-right-radius: 6px;\n  border-top-right-radius: 6px;\n`;\n\nexport const SubmitButton = styled.button`\n  width: 200px;\n  height: 60px;\n  padding: 18px 30px;\n  border-radius: 12px;\n  border: none;\n  font-size: 20px;\n  font-weight: 500;\n  background: ${props => props.theme.colors.secondary};\n  margin-left: auto;\n\n  &:hover {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  padding: 40px 110px;\n`;\n\nexport const Subtitle = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  color: ${props => props.theme.colors.hoverColor};\n`;\n\nexport const SubTitle = styled.p`\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 5px;\n`;\n\nexport const Title = styled.p`\n  font-size: 40px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const LabelCapacity = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-size: 16px;\n  font-weight: 600;\n  margin-left: 20px;\n`;\n\nexport const BoxField = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 5px;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 5px;\n`;\n\nexport const BoxCapacity = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: dashed grey;\n  padding: 10px;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  background: ${props => props.theme.colors.greyBackgroundPaper};\n  border-bottom-right-radius: 6px;\n  border-top-right-radius: 6px;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 1060px;\n  height: 34px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.textPrimary};\n  border: transparent;\n  border-radius: 8px;\n  background: ${props => props.theme.colors.greyBackgroundPaper};\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${props => props.theme.colors.hoverColor};\n  }\n`;\n\nexport const CapacityField = styled(Field)`\n  width: 1000px;\n  height: 34px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.textPrimary};\n  border: transparent;\n  border-radius: 8px;\n  background: ${props => props.theme.colors.greyBackgroundPaper};\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${props => props.theme.colors.hoverColor};\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: ${props => props.theme.colors.error};\n  font-size: 12px;\n`;\n\nexport const StyledTextField = styled(Field)`\n  width: 1060px;\n  height: 300px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.textPrimary};\n  border: transparent;\n  border-radius: 8px;\n  background: ${props => props.theme.colors.greyBackgroundPaper};\n  resize: vertical;\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${props => props.theme.colors.hoverColor};\n  }\n`;\n\nexport const CapacityTextField = styled(Field)`\n  width: 1000px;\n  height: 160px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.textPrimary};\n  border: transparent;\n  border-radius: 8px;\n  background: ${props => props.theme.colors.greyBackgroundPaper};\n  resize: vertical;\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${props => props.theme.colors.hoverColor};\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  width: 200px;\n  height: 60px;\n  padding: 18px 30px;\n  border-radius: 12px;\n  border: none;\n  font-size: 20px;\n  font-weight: 500;\n  background: ${props => props.theme.colors.secondary};\n  margin-left: auto;\n\n  &:hover {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n`;\n\nexport const AddButton = styled.button`\n  width: 170px;\n  height: 30px;\n  border-radius: 6px;\n  border: none;\n  font-size: 16px;\n  font-weight: 500;\n  background: ${props => props.theme.colors.secondary};\n  margin-bottom: 10px;\n\n  &:hover {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n`;\n\nexport const DeleteButton = styled.button`\n  width: 170px;\n  height: 30px;\n  border-radius: 6px;\n  border: none;\n  font-size: 16px;\n  font-weight: 500;\n  background: ${props => props.theme.colors.secondary};\n  margin-right: 20px;\n  margin-left: auto;\n\n  &:hover {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SubmitButton = styled.button`\n  width: 200px;\n  height: 60px;\n  padding: 18px 30px;\n  border-radius: 12px;\n  border: none;\n  font-size: 20px;\n  font-weight: 500;\n  background: ${props => props.theme.colors.secondary};\n\n  &:hover {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n`;\n\nexport const BackButton = styled.button`\n  width: 200px;\n  height: 60px;\n  padding: 18px 30px;\n  border-radius: 12px;\n  border: none;\n  font-size: 20px;\n  font-weight: 500;\n  background: ${props => props.theme.colors.secondary};\n\n  &:hover {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import { useState, ChangeEvent } from 'react';\nimport { useTypedDispatch, useTypedSelector } from '../../../redux/hooks';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { yellow } from '@mui/material/colors';\nimport { selectOneProduct } from '../../../redux/products/productsSelectors';\nimport { editProduct } from '../../../redux/products/productsOperations';\nimport { productSchema } from '../../../common/schemas/productSchema'\nimport { Container, StyledForm, Title, SubTitle, Label, Box, StyledField, Input, StyledTextField, StyledErrorMessage } from \"../../AddProductPage/AddProduct/AddProduct.styled\";\nimport { SubmitButton, ButtonBox, BackButton } from './EditProduct.styled';\n\nexport const EditProduct = () => {\n    const dispatch = useTypedDispatch();\n    const navigate = useNavigate();\n    const { codeOfGood, name, description, image, price, quantity, sale, popular, category, type, information, discount } = useTypedSelector(selectOneProduct)\n    \n    const [imagesLocal, setImagesLocal] = useState(image);\n    const [saleLocal, setSaleLocal] = useState(sale);\n    const [popularLocal, setPopularLocal] = useState(popular);\n\n    const attachImages = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.currentTarget.files) {\n            const fileArray = Array.from(e.currentTarget.files);\n            setImagesLocal(fileArray);\n        }\n    };\n\n    const changeType = () => {\n        if (type === 'null') {\n            return category;\n        }\n    };\n\n    const editProductButton = () => {\n        navigate(\n            `/admin/assortment/batteries-${type}`\n        )\n        if (category === type) {\n            navigate(\n                `/admin/assortment/${type}`\n            )\n        }\n    };\n\n    const getBack = () => {\n        navigate(-1);\n    };\n\n    return (\n        <Container>\n            <Formik\n                initialValues={{\n                    name: name,\n                    price: price,\n                    description: description,\n                    quantity: quantity,\n                    sale: sale,\n                    discount: discount,\n                    information: information,\n                    category: category,\n                    type: type,\n                    popular: popular,\n                    image: image,\n\n                }}\n                validationSchema={productSchema}\n                onSubmit={values => {\n                    const formData = new FormData();\n                    formData.append('name', values.name);\n                    formData.append('price', values.price.toString());\n                    formData.append('description', values.description);\n                    formData.append('quantity', values.quantity.toString());\n                    formData.append('sale', saleLocal.toString());\n                    formData.append('discount', values.discount.toString());\n                    formData.append('category', values.category);\n                    formData.append('type', values.type = changeType() || type);\n                    formData.append('popular', popularLocal.toString());\n                    formData.append('information', values.information);\n\n                    for (const i of imagesLocal) {\n                        formData.append('files', i)\n                    }\n\n                    dispatch(editProduct({ formData, codeOfGood })).then((result: any) => {\n                        if (result.meta.requestStatus === 'fulfilled') {\n                            editProductButton();\n                        }\n                    })\n                }}\n            >\n                <StyledForm>\n                    <Title>Редагування товару</Title>\n                    <Label>\n                        Назва товару\n                        <Box>\n                            <StyledField name=\"name\" type=\"text\" />\n                            <StyledErrorMessage name=\"name\" component=\"div\" />\n                        </Box>\n                    </Label>\n\n                    <Label>\n                        Ціна за одиницю\n                        <Box>\n                            <StyledField name=\"price\" type=\"number\" />\n                            <StyledErrorMessage name=\"price\" component=\"div\" />\n                        </Box>\n                    </Label>\n\n                    <Label>\n                        Повний опис\n                        <Box>\n                            <StyledTextField name=\"description\" type=\"text\" component=\"textarea\" placeholder=\"Наприкінці кожного пункту ОБОВ'ЯЗКОВО ставте &#171;;&#187;, крім останнього!\" />\n                            <StyledErrorMessage name=\"description\" component=\"div\" />\n                        </Box>\n                    </Label>\n                    <Box>\n                        <SubTitle>Додати фото</SubTitle>\n                        \n                        <Input\n                            accept=\"image/*\"\n                            type=\"file\"\n                            name=\"files\"\n                            onChange={attachImages}\n                            multiple\n                        />\n                    </Box>\n                    <Label>\n                        Кількість в наявності\n                        <Box>\n                            <StyledField name=\"quantity\" type=\"number\" />\n                            <StyledErrorMessage name=\"quantity\" component=\"div\" />\n                        </Box>\n                    </Label>\n                    <FormControl>\n                        <FormLabel id=\"demo-row-radio-buttons-group-label\"\n                            sx={{\n                                color: '#1f1f1f',\n                                fontSize: '16px',\n                                fontWeight: '600',\n                                '&.Mui-focused': {\n                                    color: '#1f1f1f',\n                                }\n                            }}\n                        >Знижка</FormLabel>\n                        <RadioGroup\n                            value={saleLocal}\n                            row\n                            aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                            name=\"row-radio-buttons-group\"\n                        >\n                            <FormControlLabel\n                                value={true}\n                                onChange={() => { setSaleLocal(true) }}\n                                control={<Radio sx={{\n                                    '&.Mui-checked': {\n                                        color: yellow[800],\n                                    },\n                                }} />} label=\"Так\" />\n                            <FormControlLabel\n                                value={false}\n                                onChange={() => { setSaleLocal(false) }}\n                                control={<Radio sx={{\n                                    '&.Mui-checked': {\n                                        color: yellow[800],\n                                    },\n                                }} />} label=\"Ні\" />\n                        </RadioGroup>\n                    </FormControl>\n                    {saleLocal && <Label>\n                        Відсоток знижки\n                        <Box>\n                            <StyledField name=\"discount\" type=\"number\" />\n                            <StyledErrorMessage name=\"discount\" component=\"div\" />\n                        </Box>\n                    </Label>}\n                  \n                    <Label>\n                        Категорія\n                        <Box>\n                            <StyledField name=\"category\" type=\"text\" value={category} disabled />\n                        </Box>\n                    </Label>\n\n                    {type !== \"null\" && <Label>\n                        Тип\n                        <Box>\n                            <StyledField name=\"type\" type=\"text\" value={type} disabled />\n                        </Box>\n                    </Label>}\n                     \n                    <FormControl>\n                        <FormLabel id=\"demo-row-radio-buttons-group-label\"\n                            sx={{\n                                color: '#1f1f1f',\n                                fontSize: '16px',\n                                fontWeight: '600',\n                                '&.Mui-focused': {\n                                    color: '#1f1f1f',\n                                }\n                            }}\n                        >Популярний</FormLabel>\n                        <RadioGroup\n                            value={popularLocal}\n                            row\n                            aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                            name=\"row-radio-buttons-group\"\n                        >\n                            <FormControlLabel\n                                value={true}\n                                onChange={() => { setPopularLocal(true) }}\n                                control={<Radio sx={{\n                                    '&.Mui-checked': {\n                                        color: yellow[800],\n                                    },\n                                }} />} label=\"Так\" />\n                            <FormControlLabel\n                                value={false}\n                                onChange={() => { setPopularLocal(false) }}\n                                control={<Radio sx={{\n                                    '&.Mui-checked': {\n                                        color: yellow[800],\n                                    },\n                                }} />} label=\"Ні\" />\n                        </RadioGroup>\n                    </FormControl>\n                    <Label>\n                        Інформація\n                        <Box>\n                            <StyledTextField name=\"information\" type=\"text\" component=\"textarea\" />\n                            <StyledErrorMessage name=\"information\" component=\"div\" />\n                        </Box>\n                    </Label>\n                    <ButtonBox>\n                        <BackButton type=\"button\" onClick={getBack}>Назад</BackButton>\n                        <SubmitButton\n                            type=\"submit\"\n                        >\n                            Зберегти\n                        </SubmitButton>\n                    </ButtonBox>\n                </StyledForm>\n            </Formik>\n        </Container>\n    );\n};","import styled from 'styled-components';\n\nexport const SubmitButton = styled.button`\n  width: 200px;\n  height: 60px;\n  padding: 18px 30px;\n  border-radius: 12px;\n  border: none;\n  font-size: 20px;\n  font-weight: 500;\n  background: ${props => props.theme.colors.secondary};\n\n  &:hover {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n`;\n\nexport const BackButton = styled.button`\n  width: 200px;\n  height: 60px;\n  padding: 18px 30px;\n  border-radius: 12px;\n  border: none;\n  font-size: 20px;\n  font-weight: 500;\n  background: ${props => props.theme.colors.secondary};\n\n  &:hover {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import { useState, ChangeEvent } from 'react';\nimport { useTypedDispatch, useTypedSelector } from '../../../redux/hooks';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, FieldArray } from 'formik'\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { yellow } from '@mui/material/colors';\nimport { selectOneProduct } from '../../../redux/products/productsSelectors';\nimport { editProductZbirky } from '../../../redux/products/productsOperations';\nimport { productZbirkySchema } from '../../../common/schemas/productZbirkySchema'\nimport { Container, Box, StyledForm, Title, Subtitle, SubTitle, Input, Label, BoxField, AddButton, DeleteButton, LabelCapacity, BoxCapacity, StyledField, CapacityTextField, CapacityField, StyledTextField, StyledErrorMessage } from \"../../AddProductPage/AddProductZbirky/AddProductZbirky.styled\";\nimport { SubmitButton, ButtonBox, BackButton } from './EditProductZbirky.styled';\nimport { CategoryMap, CapacityObj, BatteryConfig } from '../../../@types/products.types';\n\nexport const EditProductZbirky = () => {\n    const dispatch = useTypedDispatch();\n    const navigate = useNavigate();\n    const { codeOfGood, name, description, image, price, quantity, sale, popular, category, holder, capacity, information, discount } = useTypedSelector(selectOneProduct)\n\n    const [imagesLocal, setImagesLocal] = useState(image);\n    const [saleLocal, setSaleLocal] = useState(sale);\n    const [popularLocal, setPopularLocal] = useState(popular);\n    const [holderLocal, setHolderLocal] = useState(holder);\n\n    const categoryMapping: CategoryMap = {\n        assembly: 'assembly',\n        fpv: 'batteries-for-fpv',\n        transport: 'batteries-for-transport',\n        toys: 'batteries-for-toys',\n    };\n\n    const categoryForAdd = categoryMapping[category];\n\n    const capacityObj: CapacityObj = {\n        capacity: \"\",\n        description: \"\",\n        price: 0,\n        holder: 0,\n    };\n\n    let newCapacity: CapacityObj[] = [];\n\n    if (capacity) {\n        const keys = Object.keys(capacity)\n\n        for (let i = 0; i < keys.length; i++) {\n        \n            const obg = {\n                capacity: keys[i],\n                description: capacity[keys[i]].description,\n                price: capacity[keys[i]].price,\n                holder: capacity[keys[i]].holder\n            }\n            newCapacity.push(obg)\n        }\n    };\n\n  const attachImages = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.currentTarget.files) {\n            const fileArray = Array.from(e.currentTarget.files);\n            setImagesLocal(fileArray);\n        }\n    };\n\n    const editProductButton = () => {\n        navigate(\n            `/admin/assortment/${categoryForAdd}`\n        );\n    };\n\n    const getBack = () => {\n        navigate(-1);\n    };\n\n    return (\n        <Container>\n            <Formik\n                initialValues={{\n                    name: name,\n                    price: price,\n                    description: description,\n                    quantity: quantity,\n                    sale: sale,\n                    discount: discount,\n                    information: information,\n                    category: category,\n                    popular: popular,\n                    image: image,\n                    capacity: [...newCapacity],\n                }}\n                validationSchema={productZbirkySchema}\n                onSubmit={(values) => {\n                    let newCapacity: BatteryConfig[] = [];\n                    for (const cap of values.capacity) {\n\n                        const obj: BatteryConfig = {\n                            [cap[\"capacity\"].toString()]: {\n                                description: cap.description,\n                                holder: cap.holder,\n                                price: cap.price\n                            }\n                        }\n                        newCapacity.push(obj)\n                    }\n                    \n                    const formData = new FormData();\n                    formData.append('name', values.name);\n                    formData.append('price', values.price.toString());\n                    formData.append('description', values.description);\n                    formData.append('quantity', values.quantity.toString());\n                    formData.append('sale', saleLocal.toString());\n                    formData.append('discount', values.discount.toString());\n                    formData.append('category', values.category);\n                    formData.append('capacity', JSON.stringify(newCapacity));\n                    formData.append('holder', holderLocal.toString());\n                    formData.append('popular', popularLocal.toString());\n                    formData.append('information', values.information);\n                    \n                    for (const i of imagesLocal) {\n                        formData.append('files', i)\n                    }\n\n                    dispatch(editProductZbirky({ formData, codeOfGood })).then((result: any) => {\n                        if (result.meta.requestStatus === 'fulfilled') {\n                            editProductButton();\n                        }\n                    })\n                }}\n            >\n                {({ values }) => (\n                    <StyledForm>\n                        <Title>Додавання товару</Title>\n                        <Label>\n                            Назва товару\n                            <BoxField>\n                                <StyledField name=\"name\" type=\"text\" />\n                                <StyledErrorMessage name=\"name\" component=\"div\" />\n                            </BoxField>\n                        </Label>\n\n                        <Label>\n                            Ціна за одиницю\n                            <BoxField>\n                                <StyledField name=\"price\" type=\"text\" placeholder='Приклад: 4100-9500' />\n                                <StyledErrorMessage name=\"price\" component=\"div\" />\n                            </BoxField>\n                        </Label>\n\n                        <Label>\n                            Повний опис\n                            <BoxField>\n                                <StyledTextField\n                                    name=\"description\"\n                                    type=\"text\"\n                                    component=\"textarea\"\n                                    placeholder=\"Наприкінці кожного пункту ОБОВ'ЯЗКОВО ставте &#171;;&#187;, крім останнього!\"\n                                />\n                                <StyledErrorMessage name=\"description\" component=\"div\" />\n                            </BoxField>\n                        </Label>\n                        <Box>\n                            <SubTitle>Додати фото</SubTitle>\n                            <Input\n                                accept=\"image/*\"\n                                type=\"file\"\n                                name=\"image\"\n                                onChange={attachImages}\n                                multiple\n                            />\n                        </Box>\n                        <Label>\n                            Кількість в наявності\n                            <BoxField>\n                                <StyledField name=\"quantity\" type=\"number\" />\n                                <StyledErrorMessage name=\"quantity\" component=\"div\" />\n                            </BoxField>\n                        </Label>\n                        <FormControl>\n                            <FormLabel id=\"demo-row-radio-buttons-group-label\"\n                                sx={{\n                                    color: '#1f1f1f',\n                                    fontSize: '16px',\n                                    fontWeight: '600',\n                                    '&.Mui-focused': {\n                                        color: '#1f1f1f',\n                                    }\n                                }}\n                            >Знижка</FormLabel>\n                            <RadioGroup\n                                value={saleLocal}\n                                row\n                                aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                                name=\"row-radio-buttons-group\"\n                            >\n                                <FormControlLabel\n                                    value={true}\n                                    onChange={() => { setSaleLocal(true) }}\n                                    control={<Radio sx={{\n                                        '&.Mui-checked': {\n                                            color: yellow[800],\n                                        },\n                                    }} />} label=\"Так\" />\n                                <FormControlLabel\n                                    value={false}\n                                    onChange={() => { setSaleLocal(false) }}\n                                    control={<Radio sx={{\n                                        '&.Mui-checked': {\n                                            color: yellow[800],\n                                        },\n                                    }} />} label=\"Ні\" />\n                            </RadioGroup>\n                        </FormControl>\n                        {saleLocal && <Label>\n                            Відсоток знижки\n                            <BoxField>\n                                <StyledField name=\"discount\" type=\"number\" />\n                                <StyledErrorMessage name=\"discount\" component=\"div\" />\n                            </BoxField>\n                        </Label>}\n                  \n                        <Label>\n                            Категорія\n                            <BoxField>\n                                <StyledField name=\"category\" type=\"text\" value={category} disabled />\n                                <StyledErrorMessage name=\"category\" component=\"div\" />\n                            </BoxField>\n                        </Label>\n\n                        <FormControl>\n                            <FormLabel id=\"demo-row-radio-buttons-group-label\"\n                                sx={{\n                                    color: '#1f1f1f',\n                                    fontSize: '16px',\n                                    fontWeight: '600',\n                                    '&.Mui-focused': {\n                                        color: 'black',\n                                    }\n                                }}\n                            >Наявність холдерів</FormLabel>\n                            <RadioGroup\n                                value={holderLocal}\n                                row\n                                aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                                name=\"row-radio-buttons-group\"\n                            >\n                                <FormControlLabel\n                                    value={true}\n                                    onChange={() => { setHolderLocal(true) }}\n                                    control={<Radio sx={{\n                                        '&.Mui-checked': {\n                                            color: yellow[800],\n                                        },\n                                    }} />} label=\"Так\" />\n                                <FormControlLabel\n                                    value={false}\n                                    onChange={() => { setHolderLocal(false) }}\n                                    control={<Radio sx={{\n                                        '&.Mui-checked': {\n                                            color: yellow[800],\n                                        },\n                                    }} />} label=\"Ні\" />\n                            </RadioGroup>\n                        </FormControl>\n\n                        <Subtitle>Блок характеристик ємності</Subtitle>\n                        <FieldArray name=\"capacity\">\n                            {({ push, remove }) => (\n                                <>\n                                    {values.capacity.map((cap, index) => {\n    \n                                        return (\n                                            <BoxCapacity key={index}>\n                                                <LabelCapacity>\n                                                    Значення ємності\n                                                    <BoxField>\n                                                        <CapacityField name={`capacity[${index}].capacity`}\n                                                            value={cap.capacity}\n                                                        \n                                                            type=\"number\" />\n                                                        <StyledErrorMessage name={`capacity[${index}].capacity`} component=\"div\" />\n                                                    </BoxField>\n                                                </LabelCapacity>\n                                                <LabelCapacity>\n                                                    Характеристики\n                                                    <BoxField>\n                                                        <CapacityTextField name={`capacity[${index}].description`} value={cap.description} type=\"text\" placeholder=\"Наприкінці кожного пункту ОБОВ'ЯЗКОВО ставте &#171;;&#187;, крім останнього!\" component=\"textarea\" />\n                                                        <StyledErrorMessage name={`capacity[${index}].description`} component=\"div\" />\n                                                    </BoxField>\n                                                </LabelCapacity>\n                                                <LabelCapacity >\n                                                    Ціна\n                                                    <BoxField>\n\n                                                        <CapacityField name={`capacity[${index}].price`} type=\"number\"\n                                                            value={cap.price}\n                                                        />\n                                                        <StyledErrorMessage name={`capacity[${index}].price`} component=\"div\" />\n                                                    </BoxField>\n                                                </LabelCapacity>\n                                                {holderLocal && <LabelCapacity >\n                                                    Кількість холдерів\n                                                    <BoxField>\n\n                                                        <CapacityField name={`capacity[${index}].holder`} type=\"number\"\n                                                            value={cap.holder}\n                                                        />\n                                                        <StyledErrorMessage name={`capacity[${index}].holder`} component=\"div\" />\n                                                    </BoxField>\n                                                </LabelCapacity>}\n                                                <BoxField>\n                                                    <DeleteButton type='button'\n                                                        onClick={() => {\n                                                            if (values.capacity.length === 1) return window.alert('Ти шо, дурний? Єдиний блок він видаляє.. Нахєр я його малювала тоді');\n                                                            remove(index)\n                                                        }}>\n                                                        - видалити блок\n                                                    </DeleteButton>\n                                                </BoxField>\n                                            </BoxCapacity>\n                                        )\n                                    })\n                                    }\n                                    <AddButton type='button'\n                                        onClick={() => push(capacityObj)}>\n                                        + добавити ємність\n                                    </AddButton>\n                                </>\n                            )}\n                        </FieldArray>\n                        <FormControl>\n                            <FormLabel id=\"demo-row-radio-buttons-group-label\"\n                                sx={{\n                                    color: '#1f1f1f',\n                                    fontSize: '16px',\n                                    fontWeight: '600',\n                                    '&.Mui-focused': {\n                                        color: '#1f1f1f',\n                                    }\n                                }}\n                            >Популярний</FormLabel>\n                            <RadioGroup\n                                value={popularLocal}\n                                row\n                                aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                                name=\"row-radio-buttons-group\"\n                            >\n                                <FormControlLabel\n                                    value={true}\n                                    onChange={() => { setPopularLocal(true) }}\n                                    control={<Radio sx={{\n                                        '&.Mui-checked': {\n                                            color: yellow[800],\n                                        },\n                                    }} />} label=\"Так\" />\n                                <FormControlLabel\n                                    value={false}\n                                    onChange={() => { setPopularLocal(false) }}\n                                    control={<Radio sx={{\n                                        '&.Mui-checked': {\n                                            color: yellow[800],\n                                        },\n                                    }} />} label=\"Ні\" />\n                            </RadioGroup>\n                        </FormControl>\n                        <Label>\n                            Інформація\n                            <BoxField>\n                                <StyledTextField name=\"information\" type=\"text\" component=\"textarea\" />\n                                <StyledErrorMessage name=\"information\" component=\"div\" />\n                            </BoxField>\n                        </Label>\n                        <ButtonBox>\n                        <BackButton type=\"button\" onClick={getBack}>Назад</BackButton>\n                        <SubmitButton\n                            type=\"submit\"\n                        >\n                            Зберегти\n                        </SubmitButton>\n                    </ButtonBox>\n                    </StyledForm>\n                )}\n            </Formik>\n        </Container>\n    );\n};\n\n","import { useTypedDispatch, useTypedSelector } from '../redux/hooks';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { getOneProduct } from '../redux/products/productsOperations';\nimport { selectOneProduct, selectOneProductIsLoading } from '../redux/products/productsSelectors';\nimport { CustomLoader } from 'components/Shared/CustomLoader/CustomLoader';\nimport { EditProduct } from 'components/EditProductPage/EditProduct/EditProduct';\nimport { EditProductZbirky } from 'components/EditProductPage/EditProductZbirky/EditProductZbirky';\n\nconst EditProductPage = () => {\n  const dispatch = useTypedDispatch();\n  const isLoading = useTypedSelector(selectOneProductIsLoading);\n  const { category } = useTypedSelector(selectOneProduct);\n  const { cardId } = useParams();\n\n  useEffect(() => {\n    cardId && dispatch(getOneProduct(cardId));\n  }, [dispatch, cardId]);\n\n  const zbirka = ['assembly', 'fpv', 'transport', 'toys'];\n\n  return (\n    <>\n      {isLoading ? (\n        <CustomLoader isLoading={isLoading} />\n      ) : category && zbirka.includes(category) ? (\n        <EditProductZbirky />\n      ) : (\n        <EditProduct />\n      )}\n    </>\n  );\n};\n\nexport default EditProductPage;\n","import { RootState } from '../../redux/store';\n\nexport const selectOneProductIsLoading = (state: RootState) =>\n  state.products.oneProduct.isLoading;\nexport const selectOneProductError = (state: RootState) =>\n  state.products.oneProduct.error;\nexport const selectOneProduct = (state: RootState) =>\n  state.products.oneProduct.result;\n\nexport const selectAllProductsIsLoading = (state: RootState) =>\n  state.products.productsList.isLoading;\nexport const selectAllProductsError = (state: RootState) =>\n  state.products.productsList.error;\nexport const selectProducts = (state: RootState) =>\n  state.products.productsList.allProducts;\n"],"names":["productSchema","Yup","shape","name","required","price","positive","integer","description","quantity","min","discount","information","productZbirkySchema","trim","matches","capacity","of","holder","Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","StyledForm","Form","_templateObject3","Label","_templateObject4","SubTitle","_templateObject5","Box","_templateObject6","StyledField","Field","_templateObject7","props","theme","colors","textPrimary","greyBackgroundPaper","hoverColor","StyledErrorMessage","ErrorMessage","_templateObject8","error","StyledTextField","_templateObject9","Input","_templateObject10","SubmitButton","_templateObject11","secondary","Subtitle","LabelCapacity","BoxField","BoxCapacity","_templateObject12","CapacityField","_templateObject13","_templateObject14","_templateObject15","CapacityTextField","_templateObject16","_templateObject17","AddButton","_templateObject18","DeleteButton","_templateObject19","BackButton","ButtonBox","EditProduct","dispatch","useTypedDispatch","navigate","useNavigate","_useTypedSelector","useTypedSelector","selectOneProduct","codeOfGood","image","sale","popular","category","type","_useState","useState","_useState2","_slicedToArray","imagesLocal","setImagesLocal","_useState3","_useState4","saleLocal","setSaleLocal","_useState5","_useState6","popularLocal","setPopularLocal","_jsx","children","Formik","initialValues","validationSchema","onSubmit","values","formData","FormData","append","toString","changeType","_step","_iterator","_createForOfIteratorHelper","s","n","done","i","value","err","e","f","editProduct","then","result","meta","requestStatus","concat","_jsxs","component","placeholder","accept","onChange","currentTarget","files","fileArray","Array","from","multiple","FormControl","FormLabel","id","sx","color","fontSize","fontWeight","RadioGroup","row","FormControlLabel","control","Radio","yellow","label","disabled","onClick","EditProductZbirky","_useState7","_useState8","holderLocal","setHolderLocal","categoryForAdd","assembly","fpv","transport","toys","capacityObj","newCapacity","keys","Object","length","obg","push","attachImages","getBack","cap","obj","_defineProperty","JSON","stringify","_step2","_iterator2","editProductZbirky","_ref","FieldArray","_ref2","remove","_Fragment","map","index","window","alert","isLoading","selectOneProductIsLoading","cardId","useParams","useEffect","getOneProduct","CustomLoader","includes","state","products","oneProduct","selectAllProductsIsLoading","productsList","selectProducts","allProducts"],"sourceRoot":""}