{"version":3,"file":"static/js/258.db45d428.chunk.js","mappings":"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","sources":["components/Shared/ProductsTable/ProductsTable.jsx","utils/helpers/getParams.js","pages/BatteriesForFPVPage.jsx","redux/products/productsSelectors.js","utils/hooks/useLoader.js"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useMemo } from 'react';\nimport { selectProducts } from '../../../redux/products/productsSelectors';\nimport { getParams } from 'utils/helpers';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\nimport { Box, Button, Dialog, DialogActions, DialogTitle } from '@mui/material';\nimport {\n  DataGrid,\n  GridToolbar,\n  GridPagination,\n  GridActionsCellItem,\n  useGridApiRef,\n} from '@mui/x-data-grid';\n\nexport const ProductsTable = ({ category }) => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const apiRef = useGridApiRef();\n  const navigate = useNavigate();\n  const products = useSelector(selectProducts);\n  const { paramsCategory, paramsType, paramsSubType } = getParams(category);\n\n  const autosizeOptions = useMemo(\n    () => ({\n      includeHeaders: true,\n      includeOutliers: true,\n      expand: true,\n    }),\n    []\n  );\n\n  useEffect(() => {\n    if (apiRef.current) {\n      apiRef.current.autosizeColumns(autosizeOptions);\n    }\n  }, [apiRef, autosizeOptions, products, open]);\n\n  const CustomFooter = props => {\n    const handleClick = () => {\n      navigate(\n        `/admin/assortment/${paramsCategory}/${paramsType}/${paramsSubType}`\n      );\n    };\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={handleClick}\n          sx={{ marginLeft: '10px', marginRight: 'auto' }}\n        >\n          Додати товар\n        </Button>\n        <GridPagination />\n      </>\n    );\n  };\n\n  const rows = useMemo(\n    () =>\n      products.map(el => ({\n        id: el.codeOfGood,\n        codeOfGood: el.codeOfGood,\n        name: el.name,\n        category: `${el.category} ${el.type ? el.type : ''}`,\n        quantity: el.quantity,\n        price: el.price,\n        discount: el.discount,\n        popular: el.popular,\n      })),\n    [products]\n  );\n\n  const columns = [\n    {\n      field: 'codeOfGood',\n      headerName: 'Код товару',\n      type: 'number',\n      align: 'left',\n      headerAlign: 'left',\n    },\n    { field: 'name', headerName: 'Назва товару' },\n    {\n      field: 'category',\n      headerName: 'Категорія та тип',\n    },\n    {\n      field: 'quantity',\n      headerName: 'Кількість',\n      type: 'number',\n      align: 'left',\n      headerAlign: 'left',\n    },\n    {\n      field: 'price',\n      headerName: 'Ціна',\n      type: 'number',\n      align: 'left',\n      headerAlign: 'left',\n    },\n    {\n      field: 'discount',\n      headerName: 'Знижка',\n      type: 'number',\n      align: 'left',\n      headerAlign: 'left',\n      valueFormatter: value => {\n        if (value == null) {\n          return '';\n        }\n        return `${value.toLocaleString()} %`;\n      },\n    },\n    {\n      field: 'popular',\n      headerName: 'Популярний',\n      type: 'boolean',\n    },\n    {\n      field: 'actions',\n      type: 'actions',\n      headerName: '',\n      width: 150,\n      cellClassName: 'actions',\n      getActions: ({ id }) => {\n        return [\n          <GridActionsCellItem\n            icon={<EditOutlinedIcon />}\n            label=\"Edit\"\n            className=\"textPrimary\"\n            onClick={handleEditClick(id)}\n            color=\"inherit\"\n          />,\n          <GridActionsCellItem\n            icon={<DeleteIcon />}\n            label=\"Delete\"\n            onClick={handleDeleteClick(id)}\n            color=\"inherit\"\n          />,\n        ];\n      },\n    },\n  ];\n\n  const handleEditClick = id => () => {\n    navigate(`/admin/assortment/${id}`);\n  };\n\n  const handleDeleteClick = id => () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const deleteProduct = () => {\n    dispatch();\n  };\n\n  return (\n    <Box\n      sx={{\n        height: '100%',\n        maxWidth: '100%',\n      }}\n    >\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        slotProps={{\n          backdrop: {\n            sx: {\n              backgroundColor: 'rgba(0, 0, 0, 0.75)',\n            },\n          },\n        }}\n        sx={{\n          '& .MuiDialog-paper': {\n            bgcolor: 'secondary.main',\n            borderRadius: '18px',\n          },\n        }}\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Ви впевнені, що хочете видалити товар?\n        </DialogTitle>\n        <DialogActions>\n          <Button\n            onClick={deleteProduct}\n            sx={{\n              color: 'text.primary',\n              '&:hover': { color: 'hoverColor.main' },\n            }}\n          >\n            Підтвердити\n          </Button>\n          <Button\n            onClick={handleClose}\n            sx={{\n              color: 'text.primary',\n              '&:hover': { color: 'hoverColor.main' },\n            }}\n          >\n            Скасувати\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <DataGrid\n        apiRef={apiRef}\n        rows={rows}\n        columns={columns}\n        autosizeOptions={autosizeOptions}\n        pageSizeOptions={[10, 25, 100]}\n        hideFooterSelectedRowCount\n        slots={{\n          toolbar: GridToolbar,\n          pagination: CustomFooter,\n        }}\n        slotProps={{\n          toolbar: {\n            showQuickFilter: true,\n          },\n        }}\n        initialState={{\n          pagination: { paginationModel: { pageSize: 10 } },\n        }}\n      />\n    </Box>\n  );\n};\n","export const getParams = category => {\n  const productCategories = {\n    'Готові батареї': ['assembly', 'null', 'zbirka'],\n    'Батареї для FPV-дронів': ['fpv', 'null', 'zbirka'],\n    'Батареї для електротранпорту': ['transport', 'null', 'zbirka'],\n    'Батареї для іграшок': ['toys', 'null', 'zbirka'],\n\n    Прилади: ['devices', 'null', 'product'],\n    'Розхідні матеріали': ['materials', 'null', 'product'],\n    'Акумулятори 18650': ['battery', '18650', 'product'],\n    'Акумулятори 21700': ['battery', '21700', 'product'],\n    'Акумулятори 32650': ['battery', '32650', 'product'],\n    'Акумулятори Li-Po': ['battery', 'li-po', 'product'],\n    'Акумулятори LiFePo4': ['battery', 'lifepo4', 'product'],\n  };\n\n  if (productCategories[category]) {\n    const paramsCategory = productCategories[category][0];\n    const paramsType = productCategories[category][1];\n    const paramsSubType = productCategories[category][2];\n    return { paramsCategory, paramsType, paramsSubType };\n  }\n\n  return undefined;\n};\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getBatteriesForFPV } from '../redux/products/productsOperations';\nimport { useLoader } from 'utils/hooks';\nimport { CustomLoader } from 'components/Shared/CustomLoader/CustomLoader';\nimport { ProductsTable } from 'components/Shared/ProductsTable/ProductsTable';\n\nconst BatteriesForFPVPage = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useLoader();\n\n  useEffect(() => {\n    dispatch(getBatteriesForFPV());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <CustomLoader />}\n      {!isLoading && !error && (\n        <ProductsTable category={'Батареї для FPV-дронів'} />\n      )}\n    </>\n  );\n};\n\nexport default BatteriesForFPVPage;\n","export const selectOneProductIsLoading = state =>\n  state.products.oneProduct.isLoading;\nexport const selectOneProductError = state => state.products.oneProduct.error;\nexport const selectOneProduct = state => state.products.oneProduct.result;\n// export const selectOneProductPrice = state =>\n//   state.products.oneProduct.result.priceOneProduct;\n// export const selectSelectedHolder = state =>\n//   state.products.oneProduct.selectedHolder;\n// export const selectSelectedSealing = state =>\n//   state.products.oneProduct.selectedSealing;\n// export const selectQuantityOrders = state =>\n//   state.products.oneProduct.quantityOrders;\n// export const selectSealingPrice = state =>\n//   state.products.oneProduct.sealingPrice;\n// export const selectHolderPrice = state => state.products.oneProduct.holderPrice;\n// export const selectPriceWithSale = state =>\n//   state.products.oneProduct.priceWithSale;\n\nexport const selectAllProductsIsLoading = state =>\n  state.products.productsList.isLoading;\nexport const selectAllProductsError = state =>\n  state.products.productsList.error;\nexport const selectProducts = state => state.products.productsList.allProducts;\n","import { useSelector } from 'react-redux';\nimport {\n  selectAllProductsIsLoading,\n  selectAllProductsError,\n} from '../../redux/products/productsSelectors';\n\nexport const useLoader = () => {\n  const isLoading = useSelector(selectAllProductsIsLoading);\n  const error = useSelector(selectAllProductsError);\n\n  return { isLoading, error };\n};\n"],"names":["ProductsTable","_ref","category","_useState","useState","_useState2","_slicedToArray","open","setOpen","dispatch","useDispatch","apiRef","useGridApiRef","navigate","useNavigate","products","useSelector","selectProducts","_getParams","productCategories","Прилади","paramsCategory","paramsType","paramsSubType","getParams","autosizeOptions","useMemo","includeHeaders","includeOutliers","expand","useEffect","current","autosizeColumns","rows","map","el","id","codeOfGood","name","concat","type","quantity","price","discount","popular","columns","field","headerName","align","headerAlign","valueFormatter","value","toLocaleString","width","cellClassName","getActions","_ref2","_jsx","GridActionsCellItem","icon","EditOutlinedIcon","label","className","onClick","handleEditClick","color","DeleteIcon","handleDeleteClick","handleClose","_jsxs","Box","sx","height","maxWidth","children","Dialog","onClose","slotProps","backdrop","backgroundColor","bgcolor","borderRadius","DialogTitle","DialogActions","Button","DataGrid","pageSizeOptions","hideFooterSelectedRowCount","slots","toolbar","GridToolbar","pagination","props","_Fragment","variant","startIcon","AddIcon","marginLeft","marginRight","GridPagination","showQuickFilter","initialState","paginationModel","pageSize","_useLoader","useLoader","isLoading","error","getBatteriesForFPV","CustomLoader","selectOneProductIsLoading","state","oneProduct","selectOneProductError","selectAllProductsIsLoading","productsList","selectAllProductsError","allProducts"],"sourceRoot":""}